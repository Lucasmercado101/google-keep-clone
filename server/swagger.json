{
  "openapi": "3.0.3",
  "info": {
    "title": "Meep",
    "description": "Meep REST API",
    "version": "1.0.0"
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "userName": {
            "type": "string"
          }
        },
        "example": {
          "id": 5,
          "userName": "john389"
        }
      },
      "Label": {
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "owner": "john389",
          "name": "work"
        }
      },
      "Note": {
        "type": "object",
        "required": ["id", "title", "content", "pinned", "archived", "author"],
        "properties": {
          "id": { "type": "integer" },
          "title": { "type": "string" },
          "content": { "type": "string" },
          "pinned": { "type": "boolean" },
          "archived": { "type": "boolean" },
          "author": { "type": "string" },
          "color": {
            "type": "string",
            "enum": [
              "red",
              "orange",
              "yellow",
              "green",
              "teal",
              "blue",
              "darkblue",
              "purple",
              "pink ",
              "brown",
              "gray",
              null
            ]
          }
        },
        "example": {
          "id": 3,
          "title": "Chores",
          "content": "Take out the trash next thursday",
          "pinned": true,
          "archived": false,
          "color": null,
          "labels": []
        }
      }
    }
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["userName", "password"],
                "properties": {
                  "userName": {
                    "type": "string",
                    "example": "jacob379"
                  },
                  "password": {
                    "type": "string",
                    "example": "password1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated"
          },
          "404": {
            "description": "Username or password is incorrect, user not found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": ["userName", "password"],
                "properties": {
                  "userName": {
                    "type": "string",
                    "example": "jacob379"
                  },
                  "password": {
                    "type": "string",
                    "example": "password1"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registered successfully",
            "content": {
              "application/json": {
                "example": {
                  "userName": "john389"
                }
              }
            }
          },
          "400": {
            "description": "Invalid values sent"
          },
          "409": {
            "description": "User already exists"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "responses": {
          "200": {
            "description": "Successfully logged out"
          }
        }
      }
    },
    "/labels": {
      "get": {
        "tags": ["Labels"],
        "summary": "Get all your labels",
        "responses": {
          "200": {
            "description": "A list of all your labels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Label"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, Log in"
          }
        }
      }
    },
    "/labels/{labelId}": {
      "delete": {
        "tags": ["Labels"],
        "summary": "Deletes a label",
        "parameters": [
          {
            "in": "path",
            "name": "labelId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the label to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Label successfully deleted"
          },
          "404": {
            "description": "Label does not exist"
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Gets all your notes",
        "responses": {
          "200": {
            "description": "Notes fetched"
          },
          "401": {
            "description": "Unauthorized, log in"
          }
        }
      }
    },
    "/notes/{noteId}": {
      "get": {
        "summary": "Gets a note",
        "tags": ["Notes"],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the label to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Note fetched",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          },
          "404": { "description": "Note does not exist" }
        }
      },
      "delete": {
        "summary": "Deletes a note",
        "tags": ["Notes"],
        "parameters": [
          {
            "in": "path",
            "name": "noteId",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Numeric ID of the label to fetch"
          }
        ],
        "responses": {
          "200": {
            "description": "Note successfully deleted"
          },
          "404": { "description": "Note does not exist" }
        }
      }
    }
  }
}
